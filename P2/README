Systems Programming Assignment 2 Write up - Word Occurance Count
__________________________________________________________

Jacob Sze - jms1200 / jms1200@scarletmail.rutgers.edu
Neil Patel - np964 / np964@scarletmail.rutgers.edu

__________________________________________________________
Our Test Plan

Our testcases covered all aspects. Numbers, apostrophes, hyphens, directory scanning, ignoring directories, lexicographical ordering, capitalization, etc.
We checked all aspects of our assignment with our testcases. We utilized the testcases provided and added our own, altogether they are:

1. Given input: -foo foo- (test hyphens when letters not on both sides)
2. Given input: foo--bar (test double hyphens)
3. Given input: a2z (test with single number between)
4. Given input: foo Foo (test capitalization, ensure they are treated differently )
5. Given input: (Sample input, ensure match)
Foo bar? Bar! Foo-bar baz--quux! 'oo? "Bar, bar."
Super23foo.
6. Given input: Distinguish between working directory and target (ex. if input ./words ./innerDirectorySameName and working directory
and target directory both contain hello.txt, scan ./innerDirectorySameName/hello.txt, our innerDirectory hello.txt contains inner, outside something else)
7. Our input: a3344z (Test with multiple numbers separating)
8. Our input: ship sister sam (Test lexicographical ordering)
9. Our input: Give directory to test scanning (ignore directories and txt files starting with .)
10. Our input: '''''''''''''''''' (Test multiple apostrophes) 

__________________________________________________________
Test descriptions/results (Not including different words on new lines for sake of space)

1. Expected - foo 2, Actual - foo 2 
2. Expected - bar 1 foo 1, Actual - bar 1 foo 1 
3. Expected - a 1 z 1, Actual - a 1 z 1
4. Expected - Foo 1 foo 1, Actual - Foo 1 foo 1
5. Expected - Bar 2 bar 2 'oo 1 Foo 1 Foo-bar 1 Super 1 baz 1 foo 1 quux 1, Actual - Bar 2 bar 2 'oo 1 Foo 1 Foo-bar 1 Super 1 baz 1 foo 1 quux 1
6. Expected - inner, Actual - inner
7. Expected - a 1 z 1, Actual - a 1 z 1
8. Expected - sam 1 ship 1 sister 1, Actual - sam 1 ship 1 sister 1
9. Expected - a 1 b 1 reach 1 test 1 txt 1, Actual - a 1 b 1 reach 1 test 1 txt 1
10. Expected - '''''''''''''''''' 1, Actual - '''''''''''''''''' 1

As can be seen, all our expected outputs match actual, which include a variety of testcases, ones both provided (either conceptually
or actual inputs, and some of our own implementations)

As mentioned in our test plan, we covered all cases in regards to the assignment, both those explicitly mentioned and some other cases
that aren't exactly like given test cases 


__________________________________________________________
Design Notes

For every item in argv, we check if it is directory or a file. For directories, we recursively go through the subdirectories while scanning 
the .txt files. While reading the files, we removed all of the hypens that do not follow the rules. By seperating all of the non-letter
characters exlcuding apostrophe through strtok, we add the unique words to a linked list or add to the count for repetive words. Finally,
we print out all of the words from the linked list in a sorted alphabetical manner from highest count to lowest count. 
